name: IAAC Application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

# concurrency:
#   group: code-quality-group

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./example-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependecies with poetry
        run: poetry install --no-root
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache/save@v4
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: lint
        run: poetry run task lint
    # concurrency:
    #   group: code-quality-group

  formatter:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: formatter
        run: poetry run task formatter
    # concurrency:
    #   group: code-quality-group

  security:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: security
        run: poetry run task security
    # concurrency:
    #   group: code-quality-group

  unittests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: [lint, formatter, security]
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
          key: ${{ runner.os }}-venv
      - name: Run unit tests
        run: poetry run task test
